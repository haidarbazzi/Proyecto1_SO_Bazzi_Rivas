/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interfaces;

import Company.Company;
import Interfaces.Starter;
import Main.Global;
import javax.swing.JOptionPane;
/**
 *
 * @author andre
 */
public class Welcome extends javax.swing.JPanel {

    private boolean nickStarted;
    private boolean disneyStarted;
    

    /**
     * Creates new form NewJPanel
     */
    public Welcome() {
        initComponents();
        this.nickStarted = false;
        this.disneyStarted = false;
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        iniciarDisney = new javax.swing.JButton();
        iniciarNick = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(239, 248, 226));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(239, 248, 226));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(2, 4, 15));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("El siguiente programa ejecuta una simulación de la operación de una sede de animación para Disney Channel y Nickelodeon en Venezuela. \nNavega las ventanas para acceder a todas las funcionalidades de la simulación !");
        jTextArea1.setBorder(null);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, 530, 70));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/titleIcon.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 560, 360));

        iniciarDisney.setBackground(new java.awt.Color(239, 248, 226));
        iniciarDisney.setFont(new java.awt.Font("Gill Sans MT", 1, 12)); // NOI18N
        iniciarDisney.setForeground(new java.awt.Color(0, 107, 153));
        iniciarDisney.setText("Iniciar Disney");
        iniciarDisney.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 107, 153), 3, true));
        iniciarDisney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarDisneyActionPerformed(evt);
            }
        });
        jPanel1.add(iniciarDisney, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, 140, 30));

        iniciarNick.setBackground(new java.awt.Color(239, 248, 226));
        iniciarNick.setFont(new java.awt.Font("Gill Sans MT", 1, 12)); // NOI18N
        iniciarNick.setForeground(new java.awt.Color(245, 125, 13));
        iniciarNick.setText("Iniciar Nickelodeon");
        iniciarNick.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(245, 125, 13), 3, true));
        iniciarNick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarNickActionPerformed(evt);
            }
        });
        jPanel1.add(iniciarNick, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 480, 140, 30));

        jButton1.setBackground(new java.awt.Color(239, 248, 226));
        jButton1.setFont(new java.awt.Font("Gill Sans MT", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Gráfico de ambos");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 480, 140, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarNickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarNickActionPerformed
        if (!isNickStarted()) {
            Starter.startSimNickelodeon();
            setNickStarted(true);
            this.iniciarNick.setText("Detener Simulación");
        }else{
            for (int i = 0; i < Global.getMainWindow().getTabPanel().getTabCount(); i++) {
                if(Global.getMainWindow().getTabPanel().getTitleAt(i).equals("Nickelodeon")){
                    Starter.stopNickelodeon();
                    Global.getMainWindow().getTabPanel().remove(i);
                    break;
                }
            }
            
            setNickStarted(false);
            this.iniciarNick.setText("Iniciar Nickelodeon");
        }
    }//GEN-LAST:event_iniciarNickActionPerformed

    private void iniciarDisneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarDisneyActionPerformed
        if (!isDisneyStarted()) {
            Starter.startSimDisney();
            setDisneyStarted(true);
            this.iniciarDisney.setText("Detener Simulación");
        }else{
            for (int i = 0; i < Global.getMainWindow().getTabPanel().getTabCount(); i++) {
                if(Global.getMainWindow().getTabPanel().getTitleAt(i).equals("Disney")){
                    Starter.stopDisney();
                    Global.getMainWindow().getTabPanel().remove(i);
                    break;
                }
            }
            setDisneyStarted(false);
            this.iniciarDisney.setText("Iniciar Disney");
        }
    }//GEN-LAST:event_iniciarDisneyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (nickStarted && disneyStarted){
            
        Chart chartBoth = new Chart(Global.getNick(), 3, Global.getDisney());
       
        } 
        else {
            JOptionPane.showMessageDialog(null, " ¡Inicia ambas simulaciones!" );
        } 
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton iniciarDisney;
    private javax.swing.JButton iniciarNick;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the nickStarted
     */
    public boolean isNickStarted() {
        return nickStarted;
    }

    /**
     * @param nickStarted the nickStarted to set
     */
    public void setNickStarted(boolean nickStarted) {
        this.nickStarted = nickStarted;
    }

    /**
     * @return the disneyStarted
     */
    public boolean isDisneyStarted() {
        return disneyStarted;
    }

    /**
     * @param disneyStarted the disneyStarted to set
     */
    public void setDisneyStarted(boolean disneyStarted) {
        this.disneyStarted = disneyStarted;
    }

    
}
